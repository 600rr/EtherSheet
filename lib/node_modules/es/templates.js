if (typeof define !== 'function') { var define = require('amdefine')(module) }
define( function(require){

/*
    Templates
*/

// if we are in the browser, templates should have already been loaded
if(typeof window !== 'undefined' && window.templates) return window.templates;

// if we are on the server, load the templates

// NOTE: currently this is only for running tests via the commandline 
//       and is COMPLETELY TERRIBLE. 

// fake out requirejs so it doesn't try to load this shit in the browser
var foo = require;

var TEMPLATE_PATH = __dirname + '/templates/';
var TEMPLATE_NAMESPACE = 'templates';

var stitchit = foo('stitchit');
var _ = foo('underscore');
var template_string = stitchit({path:TEMPLATE_PATH, namespace:TEMPLATE_NAMESPACE});

// Buahahaha
eval(template_string);

// shim for injecting require into template environment
// so we can access helper functions
var templateWrapper = function(template){
  return function(data){
    data = data || {};
    data.require = require;
    return template(data);
  }
};

for(i in templates) templates[i] = templateWrapper(templates[i]); 

return templates;
});
